name: CI

on:
  #release:
  #  types: [published]
  push:
    branches:
       - chore/snyk-improvements
         #  tags:
         #- test-artifacts*
         #pull_request:
         #branches:
         #- main
jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    container:
      image: radixdlt/snyk-python:sha-e6b1b80
    permissions:
      id-token: write
      pull-requests: read
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: Configure AWS credentials to fetch secrets
        uses: aws-actions/configure-aws-credentials@97271860067ec931c45b8d104fbf0d15954ab85c # branch v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_NAME_SNYK_SECRET }}
          aws-region: "eu-west-2"
          role-session-name: "baylon-nodecli-${{ github.run_id }}-${{ github.run_attempt }}"   
      - name: Fetch AWS secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@287592d14d9c9c48199db83dc182ae12af3df18e # v1.0.1
        with:
          secret-ids: |
            SNYK, ${{ secrets.AWS_SECRET_NAME_SNYK }}
          parse-json-secrets: true
      - name: Run Snyk to check for deps vulnerabilities
        run: |
          cd node-runner-cli/
          pipenv install --python /usr/local/bin/python
          snyk auth ${{ env.SNYK_TOKEN }}
          snyk test --file=Pipfile --org=${{ env.SNYK_NETWORK_ORG_ID }} --severity-threshold=critical
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Snyk to check for code vulnerabilities
        run: snyk code test --file=./node-runner-cli/Pipfile --org=${{ env.SNYK_NETWORK_ORG_ID }} --severity-threshold=high
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test SBOM generation
        run: snyk sbom --file=./node-runner-cli/Pipfile --org=${{ env.SNYK_NETWORK_ORG_ID }} --format=cyclonedx1.4+json --json-file-output sbom.json
