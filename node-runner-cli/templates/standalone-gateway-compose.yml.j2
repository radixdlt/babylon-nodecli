version: '2.4'
services:
  gateway_api: # This is the base -- the _image and _built containers are defined below
    image: {{gateway.gateway_api.repo}}:{{gateway.gateway_api.release}}
    ports:
      - "127.0.0.1:{{gateway.gateway_api.applicationPortHostBinding or '5207'}}:80" # This allows you to connect to the API at http://localhost:5308
      - "127.0.0.1:{{gateway.gateway_api.prometheusMetricsPortHostBinding or '1235' }}:1235" # This allows you to connect to the metrics API at http://localhost:1235
    restart: {{gateway.gateway_api.restart or 'unless-stopped'}}
{% if (gateway.postgres_db is defined and gateway.postgres_db.setup == 'local') %}
    extra_hosts:
    - "host.docker.internal:host-gateway"
{% endif %}
    environment:
      ASPNETCORE_URLS: "http://*:80" # Binds to 80 on all interfaces
      PrometheusMetricsPort: "{{gateway.gateway_api.prometheusMetricsPortHostBinding or '1235' }}"
      EnableSwagger: "{{gateway.gateway_api.enable_swagger or 'false'}}"
      ConnectionStrings__NetworkGatewayReadOnly: "Host={{gateway.postgres_db.host}};Database={{gateway.postgres_db.dbname}};Username={{gateway.postgres_db.user}};Password={{gateway.postgres_db.password}}"
      ConnectionStrings__NetworkGatewayReadWrite: "Host={{gateway.postgres_db.host}};Database={{gateway.postgres_db.dbname}};Username={{gateway.postgres_db.user}};Password={{gateway.postgres_db.password}}"
      GatewayApi__Endpoints_MaxPageSize: "{{gateway.gateway_api.max_page_size or '30'}}"
      # GatewayApi__MaxWaitForDbOnStartupMs: "90" # Wait for PostGres to boot up
      GatewayApi__Network__DisableCoreApiHttpsCertificateChecks: "{{gateway.gateway_api.coreApiNode.disable_core_api_https_certificate_checks or 'false'}}"
      GatewayApi__Network__NetworkName: "{{common_config.network_name}}"
      GatewayApi__Network__CoreApiNodes__0__Name: "{{gateway.gateway_api.coreApiNode.Name}}"
      GatewayApi__Network__CoreApiNodes__0__CoreApiAddress: "{{gateway.gateway_api.coreApiNode.core_api_address}}"
      {% if gateway.gateway_api.coreApiNode.auth_header is defined %}
      GatewayApi__Network__CoreApiNodes__0__CoreApiAuthorizationHeader: "{{gateway.data_aggregator.coreApiNode.auth_header.Authorization}}"
      {% endif %}
      GatewayApi__Network__CoreApiNodes__0__RequestWeighting: "{{gateway.gateway_api.coreApiNode.request_weighting or '1'}}"
      GatewayApi__Network__CoreApiNodes__0__Enabled: "{{gateway.gateway_api.coreApiNode.enabled or 'true'}}"
  data_aggregator:
    depends_on:
      - database_migrations
    image: {{gateway.data_aggregator.repo}}:{{gateway.data_aggregator.release}}
    restart: {{gateway.data_aggregator.restart or 'unless-stopped'}}
    cpus: {{gateway.data_aggregator.cpus or '2.0'}}
{% if (gateway.postgres_db is defined and gateway.postgres_db.setup == 'local') %}
    extra_hosts:
    - "host.docker.internal:host-gateway"
{% endif %}
    ports:
      - "127.0.0.1:{{gateway.data_aggregator.applicationPortHostBinding or '5208'}}:80" # This allows you to connect to the API (for root and health checks) at http://localhost:5207
      - "127.0.0.1:{{gateway.data_aggregator.prometheusMetricsPortHostBinding or '1234'}}:1234" # This allows you to connect to the metrics API at http://localhost:1234
    environment:
      # WIPE_DATABASE: "true"
      ASPNETCORE_URLS: "http://*:80" # Binds to 80 on all interfaces
      ConnectionStrings__NetworkGatewayReadWrite: "Host={{gateway.postgres_db.host}};Database={{gateway.postgres_db.dbname}};Username={{gateway.postgres_db.user}};Password={{gateway.postgres_db.password}}"
      PrometheusMetricsPort: "{{gateway.data_aggregator.prometheusMetricsPortHostBinding or '1234'}}"
      #DataAggregator__Network__MaxWaitForDbOnStartupMs: "90"
      DataAggregator__Network__DisableCoreApiHttpsCertificateChecks:  "{{gateway.data_aggregator.coreApiNode.disable_core_api_https_certificate_checks or 'false'}}"
      DataAggregator__Network__NetworkName: "{{common_config.network_name}}"
      DataAggregator__Network__CoreApiNodes__0__Name: "{{gateway.data_aggregator.coreApiNode.Name}}"
      DataAggregator__Network__CoreApiNodes__0__CoreApiAddress: "{{gateway.data_aggregator.coreApiNode.core_api_address}}"
      {% if gateway.data_aggregator.coreApiNode.auth_header is defined %}
      DataAggregator__Network__CoreApiNodes__0__CoreApiAuthorizationHeader: "{{gateway.data_aggregator.coreApiNode.auth_header.Authorization}}"
      {% endif %}
      DataAggregator__Network__CoreApiNodes__0__TrustWeighting:  "{{gateway.data_aggregator.coreApiNode.trust_weighting or '1'}}"
      DataAggregator__Network__CoreApiNodes__0__Enabled:  "{{gateway.data_aggregator.coreApiNode.enabled or 'true'}}"
  database_migrations: # This is the base -- the _image and _built containers are defined below
    image: {{gateway.database_migration.repo}}:{{gateway.database_migration.release}}
    environment:
      ConnectionStrings__NetworkGatewayMigrations: Host={{gateway.postgres_db.host}};Database={{gateway.postgres_db.dbname}};Username={{gateway.postgres_db.user}};Password={{gateway.postgres_db.password}}
    {% if (gateway.postgres_db is defined and gateway.postgres_db.setup == 'local') %}
    extra_hosts:
    - "host.docker.internal:host-gateway"
    {% endif %}